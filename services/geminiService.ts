
import { GoogleGenAI } from "@google/genai";

// Ensure the API_KEY is available in the environment variables
const apiKey = process.env.API_KEY;
if (!apiKey) {
    throw new Error("API_KEY environment variable not set.");
}

const ai = new GoogleGenAI({ apiKey });

/**
 * Generates pixel art using the Imagen model.
 * @param userPrompt - The user's text description.
 * @returns A promise that resolves to a base64 data URL of the generated image.
 */
export const generatePixelArt = async (userPrompt: string): Promise<string> => {
    // Enhance the prompt to guide the model towards a pixel art style
    const fullPrompt = `pixel art style, ${userPrompt}`;

    try {
        console.log("Generating image with prompt:", fullPrompt);
        
        const response = await ai.models.generateImages({
            model: 'imagen-3.0-generate-002',
            prompt: fullPrompt,
            config: {
                numberOfImages: 1,
                outputMimeType: 'image/png',
                aspectRatio: '1:1',
            },
        });
        
        console.log("API response received.");

        if (response.generatedImages && response.generatedImages.length > 0) {
            const base64ImageBytes = response.generatedImages[0].image.imageBytes;
            return `data:image/png;base64,${base64ImageBytes}`;
        } else {
            throw new Error("No image was generated by the API.");
        }
    } catch (error) {
        console.error("Error generating image:", error);
        if (error instanceof Error) {
            throw new Error(`API call failed: ${error.message}`);
        }
        throw new Error("An unknown error occurred during image generation.");
    }
};
